package sample.notification;

import java.awt.Component;
import java.awt.Point;
import net.miginfocom.layout.ComponentWrapper;
import net.miginfocom.layout.LayoutCallback;
import DropIcon.glasspanepopup.DefaultLayoutCallBack;
import DropIcon.glasspanepopup.DefaultOption;
import DropIcon.glasspanepopup.GlassPanePopup;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author RAVEN
 */
public class Test extends javax.swing.JFrame {

    /**
     * Creates new form Test
     */
    public Test() {
        initComponents();
//        GlassPanePopup.install(this);
//        RunThreadIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmd = new javax.swing.JButton();
        lbName = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmd.setText("Menu");
        cmd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdActionPerformed(evt);
            }
        });

        lbName.setText("Icon");
        lbName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(397, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cmd)
                        .addGap(289, 289, 289))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lbName)
                        .addGap(221, 221, 221))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(lbName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 229, Short.MAX_VALUE)
                .addComponent(cmd)
                .addGap(86, 86, 86))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdActionPerformed

//        GlassPanePopup.showPopup(new Notifications(), new DefaultOption() {
//            @Override
//            public float opacity() {
//                return 0;
//            }
//
//            @Override
//            public LayoutCallback getLayoutCallBack(Component parent) {
//                return new DefaultLayoutCallBack(parent) {
//                    @Override
//                    public void correctBounds(ComponentWrapper cw) {
//                        if (parent.isVisible()) {
//                            Point pl = parent.getLocationOnScreen();
//                            Point bl = cmd.getLocationOnScreen();
//                            int x = bl.x - pl.x;
//                            int y = bl.y - pl.y - 300;
//                            y += (1f + getAnimate()) * 10f;
//                            cw.setBounds(x - cw.getWidth() + cmd.getWidth(), y + cmd.getHeight(), cw.getWidth(), cw.getHeight());
//                        } else {
//                            super.correctBounds(cw);
//                        }
//                    }
//                };
//            }
//
//            @Override
//            public String getLayout(Component parent, float animate) {
//                return null;
//            }
//        });
    }//GEN-LAST:event_cmdActionPerformed
    
    boolean running = false;
    Thread thIcon;

    public void RunThreadIcon() {

//        thIcon = new Thread(new Runnable() {
//            @Override
//            public void run() {
//                synchronized (this) {
//
//                    try {
//                        wait();
//                    } catch (Exception e) {
//                        e.printStackTrace();
//                    }
//                    System.out.println("Aaaaaa");
//                    GlassPanePopup.showPopup(new NotificationsIcon(), new DefaultOption() {
//                        @Override
//                        public float opacity() {
//                            return 0;
//                        }
//
//                        @Override
//                        public LayoutCallback getLayoutCallBack(Component parent) {
//                            return new DefaultLayoutCallBack(parent) {
//                                @Override
//                                public void correctBounds(ComponentWrapper cw) {
//                                    if (parent.isVisible()) {
//                                        Point pl = parent.getLocationOnScreen();
//                                        Point bl = lbName.getLocationOnScreen();
//                                        int x = bl.x - pl.x;
//                                        int y = bl.y - pl.y;
//                                        y += (1f - getAnimate()) * 10f;
//                                        cw.setBounds(x - cw.getWidth() + lbName.getWidth(), y + lbName.getHeight(), cw.getWidth(), cw.getHeight());
//
//                                    } else {
//                                        super.correctBounds(cw);
//                                    }
//
//                                }
//
//                            };
//                        }
//
//                        @Override
//                        public String getLayout(Component parent, float animate) {
//                            return null;
//                        }
//                    });
//
//                    try {
//                        Thread.sleep(2000);
//                        GlassPanePopup.closePopupLast();
//                    } catch (InterruptedException ex) {
//
//                    }
//                }
//            }
//
//        });
//        thIcon.start();
    }

    private void lbNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbNameActionPerformed
//        thIcon = new Thread(new Runnable() {
//            @Override
//            public void run() {
//                System.out.println("Aaaaaa");
//                GlassPanePopup.showPopup(new NotificationsIcon(), new DefaultOption() {
//                    @Override
//                    public float opacity() {
//                        return 0;
//                    }
//
//                    @Override
//                    public LayoutCallback getLayoutCallBack(Component parent) {
//                        return new DefaultLayoutCallBack(parent) {
//                            @Override
//                            public void correctBounds(ComponentWrapper cw) {
//                                if (parent.isVisible()) {
//                                    Point pl = parent.getLocationOnScreen();
//                                    Point bl = lbName.getLocationOnScreen();
//                                    int x = bl.x - pl.x;
//                                    int y = bl.y - pl.y;
//                                    y += (1f - getAnimate()) * 10f;
//                                    cw.setBounds(x - cw.getWidth() + lbName.getWidth(), y + lbName.getHeight(), cw.getWidth(), cw.getHeight());
//
//                                } else {
//                                    super.correctBounds(cw);
//                                }
//
//                            }
//
//                        };
//                    }
//
//                    @Override
//                    public String getLayout(Component parent, float animate) {
//                        return null;
//                    }
//                });
//
//                try {
//                    Thread.sleep(2000);
//                    GlassPanePopup.closePopupLast();
//                } catch (InterruptedException ex) {
//
//                }
//            }
//
//        });
//        thIcon.start();

    }//GEN-LAST:event_lbNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Test().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmd;
    private javax.swing.JButton lbName;
    // End of variables declaration//GEN-END:variables

}
